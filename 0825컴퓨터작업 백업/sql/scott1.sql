---5---

--1 EMP 테이블의 모든 열 출력하기
SELECT *
FROM EMP;

--2 부서 번호가 30인 데이터만 출력하기
SELECT *
FROM EMP
WHERE DEPTNO=30;

--3 AND 연산자로 여러 개의 조건식 사용하기
SELECT *
FROM EMP
WHERE DEPTNO = 30
AND JOB = 'SALEMAN';

--4 OR 연산자로 여러 개의 조건식 사용하기
SELECT *
FROM EMP
WHERE DEPTNO = 30
OR JOB = 'CLERK';

--5 곱셈 산술 연산자를 사용한 예
SELECT *
FROM EMP
WHERE SAL * 12 = 36000;

--5 부서번호 30이 아닌사람
SELECT *
FROM EMP
WHERE DEPTNO NOT IN(30);

--06 대소 비교 연산자를 사용하여 출력하기
SELECT *
FROM EMP
WHERE SAL >= 3000;

--07 문자를 대소 비교 연산자로 비교하기
SELECT *
FROM EMP
WHERE ENAME >= 'F';

--08 문자열을 대소 비교 연산자로 비교하기
SELECT *
FROM EMP
WHERE ENAME <= 'FORZ';

--09 등가 비교 연산자(!=)를 사용하여 출력하기
SELECT *
FROM EMP
WHERE SAL != 3000;

--10등가 비교 연산자(<>)를 사용하여 출력하기
SELECT *
FROM EMP
WHERE SAL<> 3000;

--10 봉급이 3000이상인 사람 이하 SAL<=3000
SELECT *
FROM EMP
WHERE SAL >= 3000;

--11등가 비교 연산자(^=)를 사용하여 출력하기
SELECT *
FROM EMP
WHERE SAL ^= 3000;

--11 이름이 FORD인 사람
SELECT *
FROM EMP
WHERE ENAME='FORD';

--12 NOT 연산자를 사용하여 출력하기
SELECT *
FROM EMP
WHERE NOT SAL = 3000;

--12 이름이 F이상인 사람
SELECT *
FROM EMP
WHERE ENAME >= 'F';

--13 OR연산자를 사용하여 여러 개 조건을 만족하는 데이터 출력하기
SELECT *
FROM EMP
WHERE JOB = 'MANAGER'
OR JOB = 'SALESMAN'
OR JOB = 'CLERK';

--13 이름이 F로 시작하는 사람
SELECT *
FROM EMP
WHERE ENAME LIKE 'F%';

--14 IN 연산자를 사용하여 출력하기
SELECT *
FROM EMP
WHERE JOB IN ('MANAGER', 'SALEMAN', 'CLERK');

--14 이름이 FORZ이전인 사람
SELECT *
FROM EMP
WHERE ENAME <= 'FORZ';

--15 JOB 'MANAGER', 'SALESMAN', 'CLERK' <OR사용>
SELECT *
FROM EMP
WHERE JOB = 'MANAGER'
    OR JOB = 'SALESMAN'
    OR JOB = 'CLERK';
    
--16 15번을 IN이용
SELECT *
FROM EMP
WHERE JOB IN ('MANAGER', 'SALESMAN', 'CLERK');

--17 15번이 아닌사람 OR이나 AND이용
SELECT *
FROM EMP
WHERE NOT(JOB = 'MANAGER'
    OR JOB = 'SALESMAN'
    OR JOB = 'CLERK');

--18 15번이 아닌사람 IN이용
SELECT *
FROM EMP
WHERE JOB NOT IN ('MANAGER', 'SALESMAN', 'CLERK');

--19 봉급이 2000에서 3000 사이
SELECT *
FROM EMP
WHERE SAL >= 2000
  AND SAL <= 3000;
  
--20 BETWEEN A AND B
SELECT *
FROM EMP
WHERE SAL BETWEEN 2000 AND 3000;

--20-2
SELECT *
FROM EMP
WHERE NOT SAL BETWEEN 2000 AND 3000;

--21 이름이 S로 시작하는 사람
SELECT *
FROM EMP
WHERE ENAME LIKE 'S%';

--22 이름에 AM이 든 사람
SELECT *
FROM EMP
WHERE ENAME LIKE '%AM%';

--23 연봉: 봉급 12달 + 보너스(COMM)***
SELECT ENAME SAL, COMM, SAL*12+NVL(COMM,0)
FROM EMP;

--24 보너스 모르는 사람 (COMM: NULL)
SELECT *
FROM EMP
WHERE COMM IS NULL;

--25 보너스 아는 사람
SELECT *
FROM EMP
WHERE COMM IS NOT NULL;

--26 급여가 NULL보다 크고 COMM이 NULL인 사람
SELECT *
FROM EMP
WHERE SAL>NULL
    AND COMM IS NULL;

--27 직속 상관이 있는 사원 데이터만 출력하기
SELECT *
FROM EMP
WHERE SAL>NULL
    OR COMM IS NULL;

--28 AND 연산자와 IS NULL 연산자 사용하기
--방법1
SELECT *
FROM EMP
WHERE DEPTNO = 10
    OR DEPTNO = 20;
    
--28-2 방법2
SELECT *
FROM EMP
WHERE DEPTNO IN(10, 20);

--28-3 방법3
SELECT *
FROM EMP
WHERE DEPTNO = 10
UNION
SELECT *
FROM EMP
WHERE DEPTNO = 20;

--29 OR 연산자와 IS NULL 연산자 사용하기
SELECT EMPNO, ENAME, SAL, DEPTNO
   FROM EMP
   WHERE DEPTNO = 10
UNION
  SELECT EMPNO, ENAME, SAL, DEPTNO
    FROM EMP
    WHERE DEPTNO = 20;
    
--30 집합 연산자(UNION)를 사용하여 출력하기
--(순서달라도, 문자끼리 숫자끼리 타입 같아야 출력가능)
SELECT EMPNO, ENAME, DEPTNO, SAL
FROM EMP
WHERE DEPTNO = 10
UNION
SELECT EMPNO, ENAME, DEPTNO, SAL
FROM EMP
WHERE DEPTNO = 20;

--31 집합 연산자(UNION)를 사용하여 출력하기
--10번 부서 사원들의 사원번호, 이름, 봉급, 부서번호
SELECT EMPNO, ENAME, SAL, DEPTNO
FROM EMP
WHERE DEPTNO = 10
UNION
SELECT EMPNO, ENAME, SAL, DEPTNO
FROM EMP
WHERE DEPTNO = 20;

--32 집합 연산자(UNION)를 사용하여 출력하기
SELECT EMPNO, ENAME, SAL, DEPTNO
FROM EMP
WHERE DEPTNO = 10
UNION 
SELECT EMPNO, ENAME, DEPTNO, SAL 
FROM EMP
WHERE DEPTNO = 20;

--33 집합 연산자(UNION)를 사용하여 출력하기
SELECT EMPNO, ENAME, SAL, DEPTNO
FROM EMP
WHERE DEPTNO = 10
UNION 
SELECT EMPNO, ENAME, DEPTNO, SAL 
FROM EMP
WHERE DEPTNO = 20;

--34 집합 연산자(UNION)를 사용하여 출력하기
SELECT EMPNO, ENAME, SAL, DEPTNO
FROM EMP
WHERE DEPTNO = 10
UNION 
SELECT EMPNO, ENAME, DEPTNO, SAL 
FROM EMP
WHERE DEPTNO = 20;

--34 집합 연산자(UNION)를 사용하여 출력하기 
SELECT EMPNO, ENAME, SAL, DEPTNO
FROM EMP
WHERE DEPTNO = 10
UNION ALL
SELECT EMPNO, ENAME, SAL, DEPTNO
FROM EMP
WHERE DEPTNO = 10;

--35 집합 연산자(UNION ALL)를 사용하여 출력하기 
SELECT EMPNO, ENAME, SAL, DEPTNO
FROM EMP
WHERE DEPTNO = 10
UNION ALL
SELECT SAL,JOB, DEPTNO, SAL 
FROM EMP
WHERE DEPTNO = 20;


--36 집합 연산자(MINUS)를 사용하여 출력하기
--(전체부서원 중에서 10번 부서만 빼고 작성)
SELECT EMPNO, ENAME, SAL, DEPTNO
FROM EMP
MINUS
SELECT EMPNO, ENAME, SAL, DEPTNO
FROM EMP
WHERE DEPTNO = 10;

SELECT *
FROM EMP
ORDER BY DPEFNOL;

--37 집합 연산자(INTERSECT)를 사용하여 출력하기
--전체 부서 중 10번 부서와 사원들의 사원번호, 이름, 봉급, 부서번호
SELECT *
FROM EMP
INTERSECT
SELECT EMPTNO, ENAME, SAL, DEPTNO
FROM EMP
WHERE DEPTNO = 10;

--38 이름에 두 번째 글자가 L인 사람
SELECT ENAME
FROM EMP
WHERE ENAME LIKE '_L%';

--Q1
SELECT EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO
FROM EMP
WHERE ENAME LIKE '%S';

--Q2
SELECT EMPNO, ENAME, JOB, SAL, DEPTNO
FROM EMP
WHERE DEPTNO =30
    AND JOB ='SALESMAN';

--Q3-1
SELECT EMPNO, ENAME, JOB, SAL, DEPTNO
FROM EMP
WHERE  DEPTNO IN(20,30)
    AND SAL >2000;
   
    
--Q3-2
SELECT EMPNO, ENAME, JOB, SAL, DEPTNO
    FROM EMP
  WHERE DEPTNO =20
UNION 
SELECT EMPNO, ENAME, JOB, SAL, DEPTNO
    FROM EMP
  WHERE DEPTNO =30
INTERSECT
SELECT EMPNO, ENAME, JOB, SAL, DEPTNO
    FROM EMP
  WHERE SAL >2000;

--Q4
SELECT EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO
    FROM EMP
  WHERE SAL <2000
UNION
SELECT EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO
    FROM EMP
  WHERE SAL >3000;
 
--Q5
SELECT ENAME, EMPNO, SAL, DEPTNO
  FROM EMP
WHERE ENAME LIKE '%E%'
INTERSECT
SELECT ENAME, EMPNO, SAL, DEPTNO
  FROM EMP
WHERE DEPTNO=30
INTERSECT
SELECT ENAME, EMPNO, SAL, DEPTNO
  FROM EMP
WHERE SAL NOT BETWEEN 1000 AND 2000;

--Q6
SELECT EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO
  FROM EMP
WHERE MGR IS NOT NULL AND JOB='MANAGER' OR JOB='CLERK' AND COMM IS NULL
INTERSECT
SELECT EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO
  FROM EMP
WHERE ENAME NOT LIKE '_L%';



---6---
--1
--SELECT * FROM DUAL;

--SELECT * SYSDATE -1
--FROM DUAL;

--01 사원명과 이름을 대문자로 소문자로, 첫자만 대문자로 
SELECT ENAME, UPPER(ENAME),LOWER(ENAME), INITCAP(ENAME)
FROM EMP;

--02 이름이 scott인 사람
SELECT *
FROM EMP
WHERE UPPER(ENAME) = UPPER('scott');

--03 이름이 scott 든 사람
SELECT *
FROM EMP
WHERE UPPER(ENAME) LIKE UPPER('%scott%');

--04 이름과 이름의 길이를 출력
SELECT ENAME, LENGTH(ENAME)
FROM EMP;

--05 이름과 이름의 길이(5자 이상을 출력)
SELECT ENAME, LENGTH(ENAME)
FROM EMP
WHERE LENGTH(ENAME)>=5;

--06 본인 이름 글자 수와 바이트 수
SELECT LENGTH('주디'), LENGTHB('주디')
FROM DUAL;

--07JOB, 첫자부터 두글자, 셋째글자부터 2글자, 5번째 글자부터 끝까지
SELECT JOB, SUBSTR(JOB, 1,2), SUBSTR(JOB, 3,2), SUBSTR(JOB, 5)
FROM EMP;

--08 SUBSTR함수 안에 다른 함수(LENGTH)함께 사용하기
SELECT JOB,
      SUBSTR(JOB, -LENGTH(JOB)),
      SUBSTR(JOB, -LENGTH(JOB), 2),
      SUBSTR(JOB, -3)
FROM EMP;

--09 INSTR 함수로 문자열 데이터에서 특정 문자열 찾기
SELECT INSTR('HELLO, ORACLE', 'L') AS INSTR_1,
       INSTR('HELLO, ORACLE', 'L', 5) AS INSTR_2,
       INSTR('HELLO, ORACLE', 'L', 2, 2) AS INSTR_3
FROM DUAL;

--10 INSTR 함수로 사원 이름에 문자 S가 있는 행 구하기
SELECT *
FROM EMP
WHERE INSTR(ENAME, 'S')>0;

--11 LIKE 연산자로 사원 이름에 문자 S가 있는 행 구하기
SELECT *
FROM EMP
WHERE ENAME LIKE '%S%';

--12 REPLACE 함수로 문자열 안에 있는 특정 문자 바꾸기
SELECT '010-1234-5678' AS REPLACE_BEFORE,
       REPLACE('010-1234-5678', '-', ' ') AS REPLACE_1,
       REPLACE('010-1234-5678', '-') AS REPLACE_2
FROM DUAL;

--13 LAPD, RPAD 함수 사용하여 출력하기
SELECT 'Oracle',
        LPAD('Oracle', 10, '#') AS LPAD_1,
        RPAD('Oracle', 10, '*') AS LPAD_1,
        LPAD('Oracle', 10) AS LPAD_2,
        RPAD('Oracle', 10) AS LPAD_2
FROM DUAL;

--14 RPAD 함수를 사용하여 개인정보 뒷자리 *표시로 출력하기
SELECT RPAD('971225-', 14, '*') AS RPAD_JMNO,
       RPAD('010-1234-', 13, '*') AS RPAD_PHONE
FROM DUAL;

--15 두 열 사이에 콜론(:)넣고 연결하기
SELECT CONCAT(EMPNO, ENAME),
       CONCAT(EMPNO, CONCAT(' : ', ENAME))
FROM EMP
WHERE ENAME = 'SCOTT';

--16 TRIM 함수로 공백 제거하여 출력하기
SELECT '[' || TRIM(' _ _Oracle_ _ ') || ']' AS TRIM,
       '[' || TRIM(LEADING FROM ' _ _Oracle_ _ ') || ']' AS TRIM_LEADING,
       '[' || TRIM(TRAILING FROM ' _ _Oracle_ _ ') || ']' AS TRIM_TRAILING,
       '[' || TRIM(BOTH FROM ' _ _Oracle_ _ ') || ']' AS TRIM_BOTH
FROM DUAL;

--17 TRIM 함수로 삭제할 문자 _삭제 후 출력하기
SELECT '[' || TRIM('_' FROM '_ _Oracle_ _') || ']' AS TRIM,
       '[' || TRIM(LEADING '_' FROM '_ _Oracle_ _') || ']' AS TRIM_LEADING,
       '[' || TRIM(TRAILING '_' FROM '_ _Oracle_ _') || ']' AS TRIM_TRAILING,
       '[' || TRIM(BOTH '_' FROM '_ _Oracle_ _') || ']' AS TRIM_BOTH
FROM DUAL;

--18 TRIM, LTRIM, RTRIM 사용하여 문자열 출력하기
SELECT '[' || TRIM(' _Oracle_ ') || ']' AS TRIM,
       '[' || LTRIM(' _Oracle_ ') || ']' AS LTRIM,
       '[' || LTRIM('<_Oracle_>', '_<') || ']' AS LTRIM_2,
       '[' || RTRIM(' _Oracle_ ') || ']' AS RTRIM,
       '[' || RTRIM('<_Oracle_>', '>_') || ']' AS RTRIM_2
FROM DUAL;

--19 ROUND 함수를 사용하여 반올림된 숫자 출력하기
SELECT ROUND(1234.5678) AS ROUND,
       ROUND(1234.5678, 0) AS ROUND_0,
       ROUND(1234.5678, 1) AS ROUND_1,
       ROUND(1234.5678, 2) AS ROUND_2,
       ROUND(1234.5678, -1) AS ROUND_MINUS1,
       ROUND(1234.5678, -2) AS ROUND_MINUS2
FROM DUAL;

--20 TRUNC 함수를 사용하여 숫자 출력하기
SELECT TRUNC(1234.5678) AS TRUNC,
       TRUNC(1234.5678, 0) AS TRUNC_0,
       TRUNC(1234.5678, 1) AS TRUNC_1,
       TRUNC(1234.5678, 2) AS TRUNC_2,
       TRUNC(1234.5678, -1) AS TRUNC_MINUS1,
       TRUNC(1234.5678, -2) AS TRUNC_MINUS2
FROM DUAL;

--21 CEIL, FLOOR 함수로 숫자 출력하기
SELECT CEIL(3.14),
       FLOOR(3.14),
       CEIL(-3.14),
       FLOOR(-3.14)
FROM DUAL;

--22 MOD 함수를 사용하여 나머지 값 출력하기
SELECT MOD(15, 6),
       MOD(10, 2),
       MOD(11, 2)
FROM DUAL;

--======================5/26==============================
--1
SELECT * 
FROM EMP;
WHERE SAL >= 100 AND SAL <= 2000; --SAL BETWEEN 1000 AND 2000;

--2 사원 이름의 첫3자 출력
SELECT SUBSTR(ENAME,1,3) --1글자부터 3글자까지
FROM EMP;

--2-1 1,2,3 제외하고 4,5,6글자 출력/??
SELECT SUBSTR(EANME,4,6)
FROM EMP;

--3
SELECT JOB,
      SUBSTR(JOB, -LENGTH(JOB)),
      SUBSTR(JOB, -LENGTH(JOB),2),
      SUBSTR(JOB, -3)             --'-'가 붙으면 뒤에서부터.
FROM EMP;

--3-1
SELECT JOB,
      SUBSTR(JOB, LENGTH(JOB)),
      SUBSTR(JOB, -LENGTH(JOB)),
      SUBSTR(JOB, -LENGTH(JOB),2),
      SUBSTR(JOB, -3)             
FROM EMP;

--5
SELECT INSTR('HELLO, ORACLE!', 'L') AS INSTR_1,       --AS뒤에는 제목(별칭)
                                                      --L을 찾아라
       INSTR('HELLO, ORACLE!', 'L', 5) AS INSTR_2,    --5번째 글자 이후부터 L을 찾아라
       INSTR('HELLO, ORACLE!', 'L', 2, 2) AS INSTR_3  --2번째 글자이후에 L중 2번째 L 
FROM DUAL;

--6 사원 이름에 S가 들어있는 이름
SELECT *
FROM EMP
WHERE INSTR(ENAME, 'S')>0;      --ENAME LIKE '%S%';

--6-1
SELECT INSTR(ENAME, 'S')
FROM EMP;

--7
SELECT '010-1234-5678' AS REPLACE_BEFORE,                 --REPLACE 기능
      REPLACE('010-1234-5678', '-', ' ') AS REPLACE_1,    --'-'가 공백으로 바뀜
      REPLACE('010-1234-5678', '-') AS REPLACE_2          --'-'가 없어짐
FROM DUAL;

--8
SELECT 'ORACLE',
        LPAD('ORACLE', 10, '#') AS LPAD_1,
        RPAD('ORACLE', 10, '*') AS RPAD_1,
        LPAD('ORACLE', 10) AS LPAD_2,
        RPAD('ORACLE', 10) AS RPAD_2
  FROM DUAL;

--9 사원 이름에서 앞의 3자리만 뽑고 전체 10자리로 오른쪽은 *로 채우기
SELECT RPAD(SUBSTR(ENAME,1,3),10,'*')
FROM EMP;

--10  971225-문자열을 14칸에 적되 오른쪽은 *로
SELECT RPAD('971225-',14,'*') AS RPAD_JMNO
FROM DUAL;

--11 CONCAT
SELECT CONCAT('ABC','DEF')
FROM DUAL;

--12 사원번호:사원명
SELECT COMCAT(COMCAT(ENPNO,':'),ENAME)
FROM EMP;

--12-1 다른방법
SELECT EMPNO || ':' || ENAME
FROM EMP;

--13
SELECT '[' || TRIM('- -Oracle- -')||']' AS TRIM,
'[' || TRIM(LEADING FROM'- -Oracle- -')||']' AS TRIM_LEADING,
'[' || TRIM(TRAILING FROM'- -Oracle- -')||']' AS TRIM_TRAILING,
'[' || TRIM('- -Oracle- -')||']' AS TRIM_BOTH
 FROM DUAL;
 
--14
SELECT '[' || TRIM('-Oracle-')||']' AS TRIM,
'[' || LTRIM('-Oracle-')||']' AS LTRIM,
'[' || LTRIM('<-Oracle->','-<')||']' AS LTRIM_2,
'[' || RTRIM('-Oracle-')||']' AS RTRIM,
'[' || RTRIM('<-Oracle->','>-')||']' AS RTRIM_2
 FROM DUAL;

--15 567.567 반올림해서 소수 1자리로 반올림은 ROUND(숫자(567.567), 소수의 몇자리인지(1))
SELECT ROUND(567.567)
FROM DUAL;

--16
SELECT ROUND(1234.5678)AS ROUND,
ROUND(1234.5678,0)AS ROUND_0,   --반올림후 소수이하 생략
ROUND(1234.5678,1)AS ROUND_1,   --소수이하 첫번째 까지
ROUND(1234.5678,2)AS ROUND_2,
ROUND(1234.5678,-1)AS ROUND_MINUS1,   --정수 일의자리 반올림
ROUND(1234.5678,-2)AS ROUND_MINUS2    --정수 십의자리 반올림
FROM DUAL;

--17 봉급 1000원 단위로 반올림해서 EX)SMITH: 3000원
SELECT ROUND(SAL,3) FROM EMP;
SELECT ENAME ||':'|| ROUND(SAL,3)||'원'
FROM EMP;

--18
SELECT TRUNC(1234.5678)AS TRUNC,    
TRUNC(1234.5678,0)AS TRUNC_0,         
TRUNC(1234.5678,1)AS TRUNC_1,       --소수 첫재까지 (나머지 자름)  
TRUNC(1234.5678,2)AS TRUNC_2,         
TRUNC(1234.5678,-1)AS TRUNC_MINUS1,   --일의자리 자름
TRUNC(1234.5678,-2)AS TRUNC_MINUS2    
FROM DUAL;

--19 봉급을 1000원 단위로 자른다(나머진 기부~)
SELECT TRUNC(SAL,-3) FROM EMP;

--20
SELECT CEIL(3.14),    --CEIL:천장. 올림
      FLOOR(3.14),    --바닥이니 내림
      CEIL(-3.14),    --'-'는 헷갈리니 좌표그리기
      FLOOR(-3.14)
FROM DUAL;

--21
SELECT MOD(15,6),     --MOD는 나머지. 
MOD(10,2),
MOD(11,2)
FROM DUAL;

--22 오늘 날짜
SELECT SYSDATE, ADD_MONTHS(SYSDATE,3)
FROM DUAL;

--22-1 오늘에서 100일 더하면
SELECT SYSDATE, ADD_MONTHS(SYSDATE,3),SYSDATE+100
FROM DUAL;

--22-1 100일 전은
SELECT SYSDATE, ADD_MONTHS(SYSDATE,3),SYSDATE-100
FROM DUAL;

--23 본인 생일 +100
SELECT TO_DATE('1997-08-20','YYYY-MM-DD')+100 --본인 생일 쓰고, 양식 쓰고, 100더하기
FROM DUAL;

--24 사원번호, 이름, 입사일, 입사후 120개월(10년)후의 날짜
SELECT EMPNO, ENAME, HIREDATE, ADD_MONTHS(HIREDATE,120)AS WORK10YEARS   --AS는 별칭.
FROM EMP;

--25
--P152 5-26
--입사 32년 미만인 사원 데이터 출력하기(현재 384개월 쓰면 32년 미만인 사람이 없어 450개월로 고쳐주었다.)
SELECT EMPNO, ENAME, HIREDATE, SYSDATE
FROM EMP
WHERE ADD_MONTHS(HIREDATE, 450)>SYSDATE;

--26
SELECT EMPNO,ENAME,HIREDATE,SYSDATE,
MONTHS_BETWEEN(HIREDATE,SYSDATE)AS MONTH_1,   --입사날보다 현재가 더 크니까. '-'나온다.
MONTHS_BETWEEN(SYSDATE,HIREDATE)AS MONTH_2,
TRUNC(MONTHS_BETWEEN(SYSDATE,HIREDATE))AS MONTH_3
FROM EMP; 

--27 오늘 날짜와 오늘이 지난 후의 '월요일'이 언제인지?, 그리고 그 전 날은?
SELECT SYSDATE,NEXT_DAY(SYSDATE,'월'), LAST_DAY(SYSDATE)
FROM DUAL;

--27-1 그럼 화요일은?
SELECT SYSDATE,NEXT_DAY(SYSDATE,'화'), LAST_DAY(SYSDATE)
FROM DUAL;

--28--P155참고
SELECT SYSDATE,
ROUND(SYSDATE, 'CC')AS FORMAT_CC,
ROUND(SYSDATE, 'YYYY')AS FORMAT_YYYY,
ROUND(SYSDATE, 'Q')AS FORMAT_Q,
ROUND(SYSDATE, 'DDD'AS FORMAT_DDD,
ROUND(SYSDATE, 'HH')AS FORMAT_HH
FROM DUAL;

--29 SCOTT라는 사원의 사원번호, 이름, 사원번호+500 찍히게~
SELECT EMPNO, ENAME, EMPNO+500
FROM EMP
WHERE ENAME = 'SCOTT';

--30 ABCD라는 문자열을 사원번호 앞에 붙여서 찍고, 사원번호 출력
SELECT 'ABCD' + EMPNO, EMPNO
FROM EMP
WHERE ENAME = 'SCOTT';

--31 오늘의 날짜, 시분초 출력
SELECT SYSDATE, 
TO_CHAR(SYSDATE,'YYYY/MM/DD HH24:MI:SS') AS 현재날짜시간
FROM DUAL;

--32 오늘의 날짜를 월, 요일, 일 출력
SELECT SYSDATE,
  TO_CHAR(SYSDATE,'MM')AS MM    --오늘 날짜 중 월만 밖으로 빼는 것.
FROM DUAL;

--32-1 응용
SELECT SYSDATE,
  TO_CHAR(SYSDATE,'MM')AS MM,
  TO_CHAR(SYSDATE,'MON')AS MON,
  TO_CHAR(SYSDATE,'MONTH')AS MONTH, 
  TO_CHAR(SYSDATE,'DD')AS DD, 
  TO_CHAR(SYSDATE,'DY')AS DY, 
  TO_CHAR(SYSDATE,'DAY')AS DAY 
FROM DUAL;

--33 
SELECT SYSDATE,
TO_CHAR(SYSDATE,'MM')AS MM,
TO_CHAR(SYSDATE,'MON','NLS_DATE_LANGUAGE = KOREAN')AS K,
TO_CHAR(SYSDATE,'MON','NLS_DATE_LANGUAGE = JAPANESE')AS J,
TO_CHAR(SYSDATE,'MON','NLS_DATE_LANGUAGE = ENGLISH')AS E,
TO_CHAR(SYSDATE,'MONTH','NLS_DATE_LANGUAGE = KOREAN')AS K, 
TO_CHAR(SYSDATE,'MONTH','NLS_DATE_LANGUAGE = JAPANESE')AS J, 
TO_CHAR(SYSDATE,'MONTH','NLS_DATE_LANGUAGE = ENGLISH')AS E 
FROM DUAL;

--34
SELECT SYSDATE,
TO_CHAR(SYSDATE,'MM')AS MM,
TO_CHAR(SYSDATE,'DD')AS DD,
TO_CHAR(SYSDATE,'DY','NLS_DATE_LANGUAGE = KOREAN')AS K,
TO_CHAR(SYSDATE,'DY','NLS_DATE_LANGUAGE = JAPANESE')AS J,
TO_CHAR(SYSDATE,'DY','NLS_DATE_LANGUAGE = ENGLISH')AS E,
TO_CHAR(SYSDATE,'DAY','NLS_DATE_LANGUAGE = KOREAN')AS K, 
TO_CHAR(SYSDATE,'DAY','NLS_DATE_LANGUAGE = JAPANESE')AS J, 
TO_CHAR(SYSDATE,'DAY','NLS_DATE_LANGUAGE = ENGLISH')AS E 
FROM DUAL;

--35
SELECT SYSDATE,
TO_CHAR(SYSDATE,'HH24:MI:SS')AS HH24MMIS,
TO_CHAR(SYSDATE,'HH24:MI:SS AM')AS HH24MMIS_AM,
TO_CHAR(SYSDATE,'HH24:MI:SS P.M.')AS HH24MMIS_PM
FROM DUAL;

--36
--6-38 여러 가지 숫자 형식을 사용하여 급여 출력하기
SELECT SAL,
TO_CHAR(SAL,'$999,999')AS SAL_$,
TO_CHAR(SAL,'L999,999')AS SAL_L,
TO_CHAR(SAL,'999,999.00')AS SAL_1,
TO_CHAR(SAL,'000,999,999.00')AS SAL_2,
TO_CHAR(SAL,'000999999.99')AS SAL_3,
TO_CHAR(SAL,'999,999,00')AS SAL_4
FROM EMP;

--37
--6-39 문자 데이터와 숫자 데이터를 연산하여 출력하기
SELECT 1300 - '1500',
      '1300' + 1500
FROM DUAL;

--38    ','는 문자로 인식할 수 없어 오류.
--6-40 문자 데이터끼리 연산하여 출력하기
SELECT '1,300' - '1,500'
FROM DUAL;

--39
--6-41 TO_NUMBER 함수로 연산하여 출력하기
SELECT TO_NUMBER('1,300','999,999') - TO_NUMBER('1,500','999,999')
FROM DUAL;

--40
--6-42 TO_DATE 함수로 문자 데이터를 날짜 데이터 변환하기
SELECT TO_DATE('2018-07-14','YYYY-MM-DD')AS TODATE1,
TO_DATE('20180714','YYYY-MM-DD')AS TODATE2
FROM DUAL;

--41 입사일이 1981년 6월 1일 이후에 입사한 사람의 정보
SELECT *
FROM EMP
WHERE HIREDATE>='81-06-01';

--41-1 41처럼 하면 년월일이 순서가 아닌 프로그램에서 오류발생 가능성이 있다.
--6-43 1981년 6월 1일 이후에 입사한 사원 정보 출력하기
SELECT *
FROM EMP
WHERE HIREDATE >= TO_DATE('1981/06/01', 'YYYY/MM/DD');

--42
--6-44 여러 가지 형식으로 날짜 데이터 출력하기
SELECT TO_DATE('49/12/10', 'YY/MM/DD') AS YY_YEAR_49,
TO_DATE('49/12/10', 'RR/MM/DD') AS RR_YEAR_49,
TO_DATE('50/12/10', 'YY/MM/DD') AS YY_YEAR_50,
TO_DATE('50/12/10', 'RR/MM/DD') AS RR_YEAR_50,
TO_DATE('51/12/10', 'YY/MM/DD') AS YY_YEAR_51,
TO_DATE('51/12/10', 'RR/MM/DD') AS RR_YEAR_51
FROM DUAL;

--43//???오ㅐ NULL이 나오지?
--6-45 NVL 함수를 사용하여 출력하기
SELECT EMPNO,ENAME,SAL,COMM,SAL+COMM,
  NVL(COMM, 0),       --NVL: NULL 일 때 0으로 나온다.
  SAL+NVL(COMM, 0)
FROM EMP;

--44 COMM이 없으면 X로 출력 있으면 O으로 출력. 연봉계산//??
--6-46 NVL2 함수를 사용하여 출력하기
SELECT EMPNO, ENAME, COMM, NVL2(COMM,'O','X'),
NVL2(COMM,SAL*12+COMM,SAL*12)AS ANNSAL
FROM EMP;


===============================
----------6/2-------
--01 연봉이 2000에서 3000
SELECT ENAME
FROM EMP
WHERE SAL BETWEEN 2000 AND 3000;

--01
SELECT SAL,COMM,SAL*12+COMM AS "연봉"
FROM EMP;

---나머지는 SCOTT2에.